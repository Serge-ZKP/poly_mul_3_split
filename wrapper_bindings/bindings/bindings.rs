/* automatically generated by rust-bindgen 0.63.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ZZ_pX {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ZZ_p {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ZZ {
    _unused: [u8; 0],
}

pub struct Send_ZZ_p(pub *mut ZZ_p);
pub struct Send_ZZ_pX(pub *mut ZZ_pX);
unsafe impl Sync for Send_ZZ_p {}
unsafe impl Send for Send_ZZ_p {}
unsafe impl Sync for Send_ZZ_pX {}
unsafe impl Send for Send_ZZ_pX {}
unsafe impl Sync for ZZ_p{}
unsafe impl Send for ZZ_p{}

extern "C" {
    pub fn ZZ_zero() -> *mut ZZ;
}
extern "C" {
    pub fn ZZ_set_long(a: ::std::os::raw::c_long) -> *mut ZZ;
}
extern "C" {
    pub fn ZZ_set_string(a: *const ::std::os::raw::c_char) -> *mut ZZ;
}
extern "C" {
    pub fn ZZ_destroy(x: *mut ZZ);
}
extern "C" {
    pub fn ZZ_p_zero() -> *mut ZZ_p;
}
extern "C" {
    pub fn ZZ_p_set_long(a: ::std::os::raw::c_long) -> *mut ZZ_p;
}
extern "C" {
    pub fn ZZ_p_set_string(a: *const ::std::os::raw::c_char, x: *mut ZZ_p);
}
extern "C" {
    pub fn ZZ_p_print(x: *mut ZZ_p);
}
extern "C" {
    pub fn ZZ_p_print_const(x: *const ZZ_p);
}
extern "C" {
    pub fn ZZ_p_random(x: *mut ZZ_p);
}
extern "C" {
    pub fn ZZ_p_to_string(
        z: *const ZZ_p,
        len: *mut ::std::os::raw::c_long,
    ) -> *mut ::std::os::raw::c_uchar;
}
extern "C" {
    pub fn ZZ_p_destroy(x: *mut ZZ_p);
}
extern "C" {
    pub fn init_modulus(p: *const ZZ);
}
extern "C" {
    pub fn ZZ_pX_zero() -> *mut ZZ_pX;
}
extern "C" {
    pub fn ZZ_pX_copy(a: *const ZZ_pX) -> *mut ZZ_pX;
}
extern "C" {
    pub fn ZZ_pX_destroy(a: *mut ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_deg(a: *const ZZ_pX) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ZZ_pX_coeff(a: *const ZZ_pX, i: ::std::os::raw::c_long) -> *const ZZ_p;
}
extern "C" {
    pub fn ZZ_pX_LeadCoeff(a: *const ZZ_pX) -> *const ZZ_p;
}
extern "C" {
    pub fn ZZ_pX_ConstTerm(a: *const ZZ_pX) -> *const ZZ_p;
}
extern "C" {
    pub fn ZZ_pX_SetCoeff_fp(x: *mut ZZ_pX, i: ::std::os::raw::c_long, a: *const ZZ_p);
}
extern "C" {
    pub fn ZZ_pX_SetCoeff_long(x: *mut ZZ_pX, i: ::std::os::raw::c_long, a: ::std::os::raw::c_long);
}
extern "C" {
    pub fn ZZ_pX_SetLength(x: *mut ZZ_pX, n: ::std::os::raw::c_long);
}
extern "C" {
    pub fn ZZ_pX_normalize(x: *mut ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_SetX(x: *mut ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_eq(x: *mut ZZ_pX, y: *mut ZZ_pX) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ZZ_pX_neq(x: *mut ZZ_pX, y: *mut ZZ_pX) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ZZ_pX_add(x: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_sub(x: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_neg(x: *mut ZZ_pX, a: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_mul(x: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_sqr(x: *mut ZZ_pX, a: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_power(x: *mut ZZ_pX, a: *const ZZ_pX, e: ::std::os::raw::c_long);
}
extern "C" {
    pub fn ZZ_pX_divRem(q: *mut ZZ_pX, r: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_div(q: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_div_fp(q: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_p);
}
extern "C" {
    pub fn ZZ_pX_div_long(q: *mut ZZ_pX, a: *const ZZ_pX, b: ::std::os::raw::c_long);
}
extern "C" {
    pub fn ZZ_pX_rem(r: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_print(x: *mut ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_reverse(x: *mut ZZ_pX, a: *const ZZ_pX, hi: ::std::os::raw::c_long);
}
extern "C" {
    pub fn ZZ_pX_random(x: *mut ZZ_pX, n: ::std::os::raw::c_long);
}
extern "C" {
    pub fn ZZ_pX_eval(b: *mut ZZ_p, f: *const ZZ_pX, a: *const ZZ_p);
}
extern "C" {
    pub fn ZZ_pX_mulmod(x: *mut ZZ_pX, a: *const ZZ_pX, b: *const ZZ_pX, f: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_sqrmod(x: *mut ZZ_pX, a: *const ZZ_pX, f: *const ZZ_pX);
}
extern "C" {
    pub fn ZZ_pX_invmod(x: *mut ZZ_pX, a: *const ZZ_pX, f: *const ZZ_pX);
}
extern "C" {
    pub fn destroy_unsigned_char(x: *mut ::std::os::raw::c_uchar);
}
